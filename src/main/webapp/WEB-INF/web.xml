<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
   xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
   <display-name>rest</display-name>

   <!-- not needed - there are no subcontexts, nothing is to be shared, so no parent is needed -->
   <!-- <context-param> <param-name>contextConfigLocation</param-name> <param-value>/WEB-INF/spring/root-context.xml</param-value> </context-param> 
      <listener> <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class> </listener> -->

   <!-- rest -->
   <servlet>
      <servlet-name>rest</servlet-name>
      <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
      <!-- Configure DispatcherServlet to use JavaConfigWebApplicationContext instead of the default XmlWebApplicationContext -->
      <init-param>
         <param-name>contextClass</param-name>
         <param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext</param-value>
      </init-param>
      <!-- Again, config locations must consist of one or more comma- or space-delimited and fully-qualified @Configuration classes -->
      <init-param>
         <param-name>contextConfigLocation</param-name>
         <param-value>org.rest.spring.WebConfig</param-value>
      </init-param>
      <load-on-startup>1</load-on-startup>
   </servlet>
   <servlet-mapping>
      <servlet-name>rest</servlet-name>
      <url-pattern>/api/*</url-pattern>
   </servlet-mapping>

   <!-- Disables servlet container welcome file handling. Needed for compatibility with Servlet 3.0 and Tomcat 7.0 -->
   <welcome-file-list>
      <welcome-file />
   </welcome-file-list>


</web-app>